.global _start
.section .text
_start:
    mov rdi, message
    call puts

    mov rsi, key
    mov rdi, text_start
    mov rcx, text_size
decrypt_loop:
    xor byte ptr [rdi], rsi
    inc rdi
    loop decrypt_loop

    jmp text_start

.section .data
message:
    .asciz "....WOODY...."

key:
    .byte 0xAA 

.section .bss
.lcomm text_start, 100
.lcomm text_size, 4
.global _start
.section .text
_start:
    mov rdi, message
    call puts

    mov rsi, key
    mov rdi, text_start
    mov rcx, text_size
decrypt_loop:
    xor byte ptr [rdi], rsi
    inc rdi
    loop decrypt_loop

    jmp text_start

.section .data
message:
    .asciz "....WOODY...."

key:
    .byte 0xAA 

.section .bss
.lcomm text_start, 100
.lcomm text_size, 4
